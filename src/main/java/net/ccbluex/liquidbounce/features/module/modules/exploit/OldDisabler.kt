package net.ccbluex.liquidbounce.features.module.modules.movement

import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.timer.TimerUtil
import net.minecraft.entity.player.PlayerCapabilities
import net.minecraft.network.play.client.C0FPacketConfirmTransaction

@ModuleInfo(name = "OldDisabler", category = ModuleCategory.MOVEMENT)
class OldDisabler : Module() {
    var count = 0
    private var sb = 0
    var disable = TimerUtil()
    var tick = 0
    @EventTarget
    fun onUpdate(event: UpdateEvent?) {
        if (mc.thePlayer.ticksExisted <= 1) {
            count = 0
            sb = 0
            disable.reset()
            tick = 0
            packet = false
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent?) {
        disable(event)
    }

    override fun onEnable() {
        super.onEnable()
        sb = 0
    }

    fun disable(event: PacketEvent?) {
        if (event != null) {
            if (event.packet is C0FPacketConfirmTransaction) {
                val c0FPacketConfirmTransaction = event.packet
                count++
                if (c0FPacketConfirmTransaction.windowId == 0 && c0FPacketConfirmTransaction.uid < 0 && sb++ > 7) event.cancelEvent()
                if (sb > 10) sb = 10
            }
        } else if (mc.thePlayer.ticksExisted % 4 == 0) sendDisable()
    }

    fun sendDisable() {
        val playerCapabilities = PlayerCapabilities()
        playerCapabilities.allowFlying = true
        playerCapabilities.isFlying = true
    }

    override val tag: String
        get() = "Hypixel"

    companion object {
        var packet = false
    }
}